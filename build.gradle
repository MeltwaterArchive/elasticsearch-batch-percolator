import org.apache.tools.ant.filters.ReplaceTokens

import static java.lang.System.getenv

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: "maven-publish"
apply plugin: 'com.jfrog.bintray'

group = 'com.meltwater'
version = project_version
sourceCompatibility = 1.7

project.group = 'com.meltwater'

repositories{
    jcenter()
}
buildscript {
    repositories {
        jcenter()
        mavenLocal()
        if (getenv('MAVEN_URL')!=null) {
            maven {
                credentials {
                    username getenv('MAVEN_USER')
                    password getenv('MAVEN_PASSWORD')
                }
                url getenv('MAVEN_URL')
            }
        }
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7"
    }
}

dependencies {
    compile 'org.elasticsearch:elasticsearch:1.7.1'
    compile 'com.meltwater:meltwater-elasticsearch-queries:1.1.1'

    testCompile 'com.jayway.jsonpath:json-path:2.2.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'com.ning:async-http-client:1.9.31'
    testCompile 'io.netty:netty:3.10.4.Final'
    testCompile 'org.slf4j:slf4j-simple:1.7.25'

}


task pluginZipFile(type: Zip){
    from(project.configurations.compile.filter {
        //Do not include elasticsearch dependencies
        it.getName().startsWith('meltwater-elasticsearch-queries')
    })
    from(project.jar)
}

build.dependsOn pluginZipFile

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

processResources {
    filesMatching('*.properties') {
        filter ReplaceTokens, tokens: [ 'plugin.version': project.version ]

    }
}

publishing {
    publications {
        JavaArtifacts(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
            artifact pluginZipFile.archivePath
            groupId project.group
            artifactId project.name
            version project.version
        }
    }
    repositories {
        maven {
            credentials {
                username getenv('MAVEN_USER')
                password getenv('MAVEN_PASSWORD')
            }
            url getenv('MAVEN_URL')
        }
    }
}

bintray {
    user = getenv('BINTRAY_USER')
    key = getenv('BINTRAY_KEY')
    publications = ['JavaArtifacts']
    publish = true
    pkg {
        repo = 'opensource'
        name = 'elasticsearch-batch-percolator'
        userOrg = 'meltwater'
        licenses = ['MIT']
        vcsUrl = "https://github.com/meltwater/${project.name}"
        version {
            gpg{
                sign = true
            }
            released  = new Date()
        }
    }
}


task ('wrapper', type:Wrapper) {
    gradleVersion = '3.1'
}

test{
    jvmArgs '-Xmx1G', '-XX:MaxPermSize=512M', '-XX:-UseSplitVerifier'
}



